/*
 * This file is generated by jOOQ.
 */
package com.tigerpay.auth.model.jooq.schema;


import com.tigerpay.auth.model.jooq.schema.tables.Account;
import com.tigerpay.auth.model.jooq.schema.tables.AccountRole;
import com.tigerpay.auth.model.jooq.schema.tables.RefreshToken;

import org.jooq.ForeignKey;
import org.jooq.Record;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Record> ACCOUNT_EMAIL_ADDRESS_UQ = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_email_address_uq"), new TableField[] { Account.ACCOUNT.EMAIL_ADDRESS }, true);
    public static final UniqueKey<Record> ACCOUNT_PHONE_NUMBER_UQ = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_phone_number_uq"), new TableField[] { Account.ACCOUNT.PHONE_NUMBER }, true);
    public static final UniqueKey<Record> ACCOUNT_PK = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_pk"), new TableField[] { Account.ACCOUNT.UUID }, true);
    public static final UniqueKey<Record> ACCOUNT_ROLE_KEY_UQ = Internal.createUniqueKey(AccountRole.ACCOUNT_ROLE, DSL.name("account_role_key_uq"), new TableField[] { AccountRole.ACCOUNT_ROLE.KEY }, true);
    public static final UniqueKey<Record> ACCOUNT_ROLE_PK = Internal.createUniqueKey(AccountRole.ACCOUNT_ROLE, DSL.name("account_role_pk"), new TableField[] { AccountRole.ACCOUNT_ROLE.UUID }, true);
    public static final UniqueKey<Record> REFRESH_TOKEN_PK = Internal.createUniqueKey(RefreshToken.REFRESH_TOKEN, DSL.name("refresh_token_pk"), new TableField[] { RefreshToken.REFRESH_TOKEN.UUID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<Record, Record> ACCOUNT__ACCOUNT_ACCOUNT_ROLE_FK = Internal.createForeignKey(Account.ACCOUNT, DSL.name("account_account_role_fk"), new TableField[] { Account.ACCOUNT.ROLE_UUID }, Keys.ACCOUNT_ROLE_PK, new TableField[] { AccountRole.ACCOUNT_ROLE.UUID }, true);
    public static final ForeignKey<Record, Record> REFRESH_TOKEN__REFRESH_TOKEN_ACCOUNT_FK = Internal.createForeignKey(RefreshToken.REFRESH_TOKEN, DSL.name("refresh_token_account_fk"), new TableField[] { RefreshToken.REFRESH_TOKEN.ACCOUNT_UUID }, Keys.ACCOUNT_PK, new TableField[] { Account.ACCOUNT.UUID }, true);
}

/*
 * This file is generated by jOOQ.
 */
package com.tigerpay.auth.model.jooq.schema.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * Stores refresh token data
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RefreshTokenEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID uuid;
    private String token;
    private LocalDateTime expiresAt;
    private UUID accountUuid;

    public RefreshTokenEntity() {}

    public RefreshTokenEntity(RefreshTokenEntity value) {
        this.uuid = value.uuid;
        this.token = value.token;
        this.expiresAt = value.expiresAt;
        this.accountUuid = value.accountUuid;
    }

    public RefreshTokenEntity(
        UUID uuid,
        String token,
        LocalDateTime expiresAt,
        UUID accountUuid
    ) {
        this.uuid = uuid;
        this.token = token;
        this.expiresAt = expiresAt;
        this.accountUuid = accountUuid;
    }

    /**
     * Getter for <code>public.refresh_token.uuid</code>. Refresh token UUID
     */
    public UUID getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>public.refresh_token.uuid</code>. Refresh token UUID
     */
    public RefreshTokenEntity setUuid(UUID uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * Getter for <code>public.refresh_token.token</code>. Refresh token itself
     */
    public String getToken() {
        return this.token;
    }

    /**
     * Setter for <code>public.refresh_token.token</code>. Refresh token itself
     */
    public RefreshTokenEntity setToken(String token) {
        this.token = token;
        return this;
    }

    /**
     * Getter for <code>public.refresh_token.expires_at</code>. Refresh token
     * expiration date (timestamp)
     */
    public LocalDateTime getExpiresAt() {
        return this.expiresAt;
    }

    /**
     * Setter for <code>public.refresh_token.expires_at</code>. Refresh token
     * expiration date (timestamp)
     */
    public RefreshTokenEntity setExpiresAt(LocalDateTime expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }

    /**
     * Getter for <code>public.refresh_token.account_uuid</code>. Account UUID
     * that owns this particular refresh token
     */
    public UUID getAccountUuid() {
        return this.accountUuid;
    }

    /**
     * Setter for <code>public.refresh_token.account_uuid</code>. Account UUID
     * that owns this particular refresh token
     */
    public RefreshTokenEntity setAccountUuid(UUID accountUuid) {
        this.accountUuid = accountUuid;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RefreshTokenEntity other = (RefreshTokenEntity) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.token == null) {
            if (other.token != null)
                return false;
        }
        else if (!this.token.equals(other.token))
            return false;
        if (this.expiresAt == null) {
            if (other.expiresAt != null)
                return false;
        }
        else if (!this.expiresAt.equals(other.expiresAt))
            return false;
        if (this.accountUuid == null) {
            if (other.accountUuid != null)
                return false;
        }
        else if (!this.accountUuid.equals(other.accountUuid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.token == null) ? 0 : this.token.hashCode());
        result = prime * result + ((this.expiresAt == null) ? 0 : this.expiresAt.hashCode());
        result = prime * result + ((this.accountUuid == null) ? 0 : this.accountUuid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RefreshTokenEntity (");

        sb.append(uuid);
        sb.append(", ").append(token);
        sb.append(", ").append(expiresAt);
        sb.append(", ").append(accountUuid);

        sb.append(")");
        return sb.toString();
    }
}
